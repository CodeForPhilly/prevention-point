# Generated by Django 2.2.13 on 2021-02-24 14:21

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DrugMatrix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('added', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Insurer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(db_index=True, max_length=50)),
                ('last_name', models.CharField(db_index=True, max_length=100)),
                ('last_four_ssn', models.CharField(max_length=4, verbose_name='Last 4 of SSN')),
                ('pp_id', models.CharField(db_index=True, max_length=200, verbose_name='Prevention Point ID')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('mtf', 'Mtf'), ('ftm', 'Ftm'), ('gender queer', 'Gender Queer'), ('other', 'Other')], max_length=12)),
                ('race', models.CharField(choices=[('black (african american)', 'Black (African American)'), ('white (caucasian)', 'White (Caucasian)'), ('asian pi', 'Asian Pi'), ('native american', 'Native American'), ('latino', 'Latino'), ('other', 'Other')], max_length=24)),
                ('date_of_birth', models.DateField(db_index=True)),
                ('start_date', models.DateField()),
                ('is_insured', models.BooleanField(default=False)),
                ('maiden_name', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name="Mother's Maiden Name")),
                ('sep_id', models.CharField(blank=True, db_index=True, max_length=16, null=True, unique=True)),
                ('insurer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Insurer')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_closed', models.BooleanField(default=False)),
                ('is_frozen', models.BooleanField(default=False)),
                ('has_queue', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('available', models.BooleanField(default=False)),
                ('slug', models.CharField(max_length=100, unique=True, verbose_name='Concise Descriptive Identifier')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='core.Program')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=100)),
                ('site_type', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=1000, null=True)),
                ('zip_code', models.CharField(max_length=10, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Visit Notes')),
                ('urgency', models.CharField(choices=[('CRISIS', 4), ('URGENT', 3), ('BRIEF_VISIT', 2), ('TIME_SENSITIVE', 1)], default='TIME_SENSITIVE', max_length=20)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Participant')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Program')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Service')),
            ],
        ),
        migrations.CreateModel(
            name='UrineDrugScreen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_test', models.DateField()),
                ('uds_temp', models.CharField(max_length=100, verbose_name='Urine Temperature')),
                ('pregnancy_test', models.BooleanField(default=False)),
                ('opiates', models.BooleanField(default=False)),
                ('fentanyl', models.BooleanField(default=False)),
                ('bup', models.BooleanField(default=False, verbose_name='Buprenorphine')),
                ('coc', models.BooleanField(default=False, verbose_name='Cocaine')),
                ('amp', models.BooleanField(default=False, verbose_name='Amphetamine')),
                ('m_amp', models.BooleanField(default=False, verbose_name='Methamphetamine')),
                ('thc', models.BooleanField(default=False, verbose_name='THC')),
                ('mtd', models.BooleanField(default=False, verbose_name='Methadone')),
                ('pcp', models.BooleanField(default=False, verbose_name='PCP')),
                ('bar', models.BooleanField(default=False, verbose_name='Barbiturates')),
                ('bzo', models.BooleanField(default=False, verbose_name='Benzodiazepines')),
                ('tca', models.BooleanField(default=False, verbose_name='Tricyclic Antidepressants')),
                ('oxy', models.BooleanField(default=False, verbose_name='Oxycodone')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='SepEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('zip_code', models.CharField(max_length=100, verbose_name='Zip Code')),
                ('housing', models.CharField(choices=[('Permanent Housing', 'Permanent Housing'), ('Temporarily Housed', 'Temporarily Housed'), ('Shelter', 'Shelter'), ('Street', 'Street'), ('At Risk For Homelessness', 'At Risk For Homelessness')], max_length=100, verbose_name='Current Housing Situation')),
                ('treatment_type', models.CharField(choices=[('Methadone', 'Methadone'), ('Suboxone', 'Suboxone'), ('Vivitrol', 'Vivitrol'), ('IOP', 'Iop'), ('Recovery House', 'Recovery House'), ('Not in Treatment', 'Not In Treatment')], default=None, max_length=100, null=True, verbose_name='Type of Drug Treatment')),
                ('health_insurance', models.CharField(choices=[('Medicare', 'Medicare'), ('Medicaid', 'Medicaid'), ('Other', 'Other'), ('Uninsured', 'Uninsured')], max_length=100, verbose_name='Does participant have health insurance?')),
                ('health_insurance_other', models.CharField(default=None, max_length=100, null=True, verbose_name='Indicate Health Insurance')),
                ('hep_c_test', models.BooleanField(default=False, verbose_name='Tested for hepatitis C')),
                ('hep_c_test_date', models.DateField(blank=True, null=True)),
                ('hiv_test', models.BooleanField(default=False, verbose_name='Tested for HIV')),
                ('hiv_test_date', models.DateField(blank=True, null=True)),
                ('narcan', models.BooleanField(default=False, verbose_name='Does participant have Narcan today?')),
                ('harm_reduction_counseling', models.BooleanField(default=False, verbose_name='Received Harm Reduction Counseling')),
                ('left_with_narcan', models.BooleanField(default=False, verbose_name='Participant left with Narcan')),
                ('overdose_prevention', models.BooleanField(default=False, verbose_name='Received Overdose Prevention Counseling')),
                ('mobile_site_schedule', models.BooleanField(default=False, verbose_name='Participant left with mobile site schedule')),
                ('referred_to_testing', models.BooleanField(default=False, verbose_name='Referred to HIV or HCV testing')),
                ('drug_matrix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.DrugMatrix')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='SepData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('needles_in', models.IntegerField()),
                ('needles_out', models.IntegerField()),
                ('exchanged_for', models.IntegerField(default=None, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Site')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('question', models.CharField(max_length=100)),
                ('input_type', models.CharField(choices=[('date', 'Date'), ('number', 'Number'), ('radio', 'Radio'), ('select', 'Select'), ('text', 'Text'), ('textarea', 'Textarea')], max_length=24)),
                ('active', models.BooleanField(default=True)),
                ('form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Form')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramAvailability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Program')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(max_length=100)),
                ('value', models.IntegerField()),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_delivery', models.CharField(max_length=100)),
                ('medication_name', models.CharField(max_length=100)),
                ('ingestion_frequency', models.IntegerField()),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='HCVNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_timestamp', models.DateTimeField()),
                ('hcv_note', models.TextField()),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='FrontDeskEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('ARRIVED', 'arrived'), ('SEEN', 'seen'), ('LEFT', 'left'), ('STEPPED_OUT', 'stepped_out'), ('CAME_BACK', 'came_back')], max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Visit')),
            ],
        ),
        migrations.AddField(
            model_name='form',
            name='program',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Program'),
        ),
        migrations.CreateModel(
            name='CaseManagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crs_seen', models.BooleanField(default=False)),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Visit')),
            ],
        ),
        migrations.CreateModel(
            name='BehavioralHealthNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_timestamp', models.DateTimeField()),
                ('behavior_note', models.TextField()),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Visit')),
            ],
        ),
    ]
